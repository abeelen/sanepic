# Sanepic ini file :
# Edit the lines to modify the options !

[common]
data_directory = ./data/PLW_extracted ; source data directory
input_directory = ./inputDir/ ; input directory with all the configurations files
output_dir = ./Output/ ; output directory
# temp_dir = ./tempDir_${SANEPIC_HOSTNAME}/ ; temporary directory
temp_dir = /data/${SANEPIC_HOSTNAME}/data1/abeelen/sanepicInternal/polaris_PMW_newPara
fits_filelist = listFile.list ; file containing fits file names
bolo_suffix = _veryfew.bolo ; bolometers filelist suffix
para=bolo

[sanePos]
# pixsize = 0.00388888888889 ; size of pixels (degrees) (PLW)
pixsize = 0.00277777777778 ; size of pixels (degrees) (PMW)
map_flagged_data = True ; flagged data put in a separated map
file_format = 1 ; SANEPIC 0, HIPE 1
project_gaps = True ; gaps are projected to a pixel in the map, if so gap filling of noise only is performed iteratively.
proj_code = TAN ; projection type, see wcslib projection code (default: TAN)
#lon = 55.649343231546
#lat = 88.735659667811
#lon = 31.002560709295
#lat = 88.363583591952
#mask_file = mask.fits

[saneProc]
#fsamp = 10.016081 ; detectors sampling frequency [Hz]
fsamp_file = fsamp.fsamp
fhp = 0.000366 ; frequency of the high pass filter applied to the data [Hz]
fhp_file = fhp.fhp
apodize_Nsamples = 100 ; number of samples to apodize
fcut_file = fCutFile.fcut ; filename containing the frequency at which noise power spectra are thresholded
poly_order = 1 ; baseline polynomia order (default : 0 no baseline)
linear_baseline = True ; simple linear baseline removed from the data (False : default)
correlation = True ; Set this keyword to False if correlations between detectors are not included in the analysis (True : default)
fill_gap = True ; Do we fill the gaps ?  (True : default)
#wisdom = True

[saneInv]
noise_dir = /data/glx-herschel/data1/abeelen/Projects/SAG-3/polaris/Output_polaris_PLW/
cov_matrix_suffix = _psd.fits ; this file contains the matrix you want to invert
map_file = ./Output_ref/optimMap_sanePic.fits

[sanePic]
iterW = 10 ; Write temporary map files on disk every iterW number of loop
iterMAX = 2000 ; Maximum number of conjugate gradient loops (default: 2000)
map_prefix = optimMap ; prefix for the fits file (default : optimMap)
tolerance = 1e-2 ; Tolerance to reach the end of the loop
subtolerance = 1e-02 ; Tolerance to reach the first map
